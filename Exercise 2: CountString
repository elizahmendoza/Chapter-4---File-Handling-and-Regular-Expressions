import tkinter as tk
from tkinter import filedialog

class StringCounterApp:
    def __init__(self, master):
        self.master = master
        self.master.title("String Counter App")

        self.label = tk.Label(master, text="Select a file:")
        self.label.pack(pady=10)

        self.browse_button = tk.Button(master, text="Browse", command=self.browse_file)
        self.browse_button.pack()

        self.result_label = tk.Label(master, text="")
        self.result_label.pack(pady=10)

        self.entry_label = tk.Label(master, text="Enter string for free search:")
        self.entry_label.pack(pady=5)

        self.entry = tk.Entry(master)
        self.entry.pack(pady=5)

        self.search_button = tk.Button(master, text="Search", command=self.search_string)
        self.search_button.pack(pady=10)

    def browse_file(self):
        file_path = filedialog.askopenfilename(filetypes=[("Text files", "*.txt")])
        if file_path:
            count_dict = self.count_strings(file_path)
            result_text = "Occurrences:\n"
            for string, count in count_dict.items():
                result_text += f"{string}: {count}\n"
            self.result_label.config(text=result_text)

    def count_strings(self, file_path):
        strings_to_count = [
            "Hello my name is Peter Parker",
            "I love Python Programming",
            "Love",
            "Enemy"
        ]

        try:
            with open(file_path, "r", encoding="utf-8") as file:
                content = file.read()
                count_dict = {string: content.count(string) for string in strings_to_count}
                return count_dict
        except FileNotFoundError:
            return {"Error": "File not found"}
        except Exception as e:
            return {"Error": str(e)}

    def search_string(self):
        user_input = self.entry.get()
        if user_input:
            try:
                file_path = filedialog.askopenfilename(filetypes=[("Text files", "*.txt")])
                with open(file_path, "r", encoding="utf-8") as file:
                    content = file.read()
                    count = content.count(user_input)
                    self.result_label.config(text=f"Occurrences of '{user_input}': {count}")
            except FileNotFoundError:
                self.result_label.config(text="Error: File not found")
            except Exception as e:
                self.result_label.config(text=f"Error: {str(e)}")
        else:
            self.result_label.config(text="Please enter a string for search")

if __name__ == "__main__":
    root = tk.Tk()
    app = StringCounterApp(root)
    root.mainloop()
